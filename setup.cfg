[metadata]
name = dreg-client
version = 1.0.0
url = https://github.com/djmattyg007/dreg-client
project_urls =
    Source = https://github.com/djmattyg007/dreg-client
    Issues = https://github.com/djmattyg007/dreg-client/issues
author = Matthew Gamble
author_email = git@matthewgamble.net
license = Apache License 2.0
license_file = LICENSE.txt
description = API client for Docker Registries
long_description = file: README.rst
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Topic :: System :: Software Distribution
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9


[options]
zip_safe = False
include_package_data = True
packages = find:
python_requires = >= 3.9
install_requires =
    requests >= 2.22, < 3.0.0
    requests-toolbelt >= 0.9.1, < 0.10.0


[options.extras_require]
lint =
    black
    check-manifest
    flake8
    flake8-annotations-complexity
    flake8-black
    flake8-breakpoint
    flake8-bugbear
    flake8-builtins
    flake8-comprehensions
    flake8-eradicate
    flake8-expression-complexity
    flake8-isort
    flake8-pytest-style
    flake8-requirements
    isort
    pep8-naming
typecheck =
    mypy
    types-freezegun
    types-requests
test =
    coverage[toml] >= 5.5, < 6.0
    docker >= 5.0.2, < 6.0.0
    freezegun
    pytest
    pytest-cov
    responses
build =
    build
    twine
dev =
    wheel
    invoke
    %(lint)s
    %(typecheck)s
    %(test)s


[options.packages.find]
exclude =
    tests
    tests.*


[flake8]
application-import-names = dreg_client, tests
exclude = build
max-line-length = 100
select =
    # Regular flake8 rules, plus flake8-comprehensions (C4), plus flake8-eradicate (E800)
    C, E, F, W
    # flake8-builtins
    A
    # flake8-bugbear rules, plus flake8-breakpoint (B6)
    B
    # flake8-isort, plus flake8-requirements (I9)
    I
    # pep8-naming rules
    N
    # flake8-pytest-style
    PT
    # flake8-expression-complexity
    ECE
    # flake8-annotations-complexity
    TAE
ignore =
    # E203: whitespace before ':' (replaced by Black)
    E203
    # E501: line too long (replaced by Black)
    E501
    # E731: utterly pointless
    E731
    # W503: line break before binary operator (not PEP8 compliant)
    W503
    # PT004: disabled because it creates false positives with fixtures that yield
    # Also need to sort out this github issue: https://github.com/m-burst/flake8-pytest-style/issues/141
    PT004

# flake8-pytest-style
pytest-fixture-no-parentheses = true
pytest-parametrize-values-type = tuple
pytest-parametrize-values-row-type = tuple
